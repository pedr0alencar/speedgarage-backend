name: Fly.io – Setup (manual, roda 1x)

on:
  workflow_dispatch:        # exibe um botão “Run workflow” no GitHub

jobs:
  create-resources:
    runs-on: ubuntu-latest
    steps:
      - name: Instalar Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Definir variáveis
        run: |
          echo "APP_NAME=speedgarage-web"            >> $GITHUB_ENV   # 
          echo "DB_NAME=speedgarage-db"              >> $GITHUB_ENV
          echo "PRIMARY_REGION=gig"                  >> $GITHUB_ENV   # gig = Rio (próximo ao Brasil Central)
          echo "VM_SIZE=shared-cpu-1x"               >> $GITHUB_ENV   # 256 MB RAM. 512 MB+ se precisar
          echo "VOLUME_SIZE=1"                       >> $GITHUB_ENV   # GB do disco do Postgres

      - name: (Opcional) Deletar recursos antigos se existirem
        run: |
          flyctl apps destroy -y $APP_NAME       || true
          flyctl postgres destroy -y $DB_NAME    || true
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Criar o novo App no Fly
        run: |
          flyctl apps create $APP_NAME --region $PRIMARY_REGION --org personal --yes
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Criar o banco PostgreSQL
        run: |
          flyctl postgres create \
            --name $DB_NAME \
            --region $PRIMARY_REGION \
            --initial-cluster-size 1 \
            --vm-size $VM_SIZE \
            --volume-size $VOLUME_SIZE \
            --yes
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Anexar o banco ao App
        run: |
          flyctl postgres attach \
            --postgres-app $DB_NAME \
            --app $APP_NAME \
            --yes
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
